# Untested methods

# api/accounts/activate/<str:username>/<str:temp_identifier>
#   - untested because depends on e-mail account activation.

# Public methods

# api/public/describe/
# *<str:object_id_root>/<str:object_id_version>

# Token methods

# api/accounts/new/
# api/accounts/describe/
# api/objects/token/
# api/objects/create/
# *<str:draft_object_id>
# *api/objects/permissions/
# *api/objects/permissions/set/

# Testing order (P - Public, T - Token)

# (P) api/accounts/new/
# (T) api/accounts/describe/
# (T) api/objects/token/
# (T) api/objects/create/
# (T) *<str:draft_object_id>
# (T) *api/objects/permissions/
# (T) *api/objects/permissions/set/
# (P) *<str:object_id_root>/<str:object_id_version>



# ----- TESTS ----- #




curl -X GET http://127.0.0.1:8000/api/public/describe/ | python3.9 -m json.tool

curl -o - -X GET http://127.0.0.1:8000/api/public/describe/


curl -X POST -d 'email=chrisarmstrong151@gmail.com' http://127.0.0.1:8000/api/accounts/new/


curl -H 'Authorization: Token e202270bc7a38d43559ac967222453c725e3119b' -X POST http://127.0.0.1:8000/api/accounts/describe/ | python3.9 -m json.tool


curl -H 'Authorization: Token e202270bc7a38d43559ac967222453c725e3119b' -X POST http://127.0.0.1:8000/api/objects/token/ | python3.9 -m json.tool


# No draft ID provided.

# Request a table that shouldn't exist.
curl -d '{"POST_objects_draft":[{"table": "this_table_should_not_exist"}]}' -H 'Authorization: Token e202270bc7a38d43559ac967222453c725e3119b' -H 'Content-type: application/json; charset=UTF-8' -X POST http://127.0.0.1:8000/api/objects/draft/ -o /dev/null -w '%{http_code}\n' -s | python3.9 -m json.tool

# Request a table that exists but for which
# the requestor isn't in the provided
# owner group.
curl -d '{"POST_objects_draft":[{"table": "bco_draft", "owner_group": "this_owner_group_should_not_exist"}]}' -H 'Authorization: Token e202270bc7a38d43559ac967222453c725e3119b' -H 'Content-type: application/json; charset=UTF-8' -X POST http://127.0.0.1:8000/api/objects/draft/ | python3.9 -m json.tool

# Request a table that exists and the requestor
# is in the provided owner group, but the group
# does not have write permissions.
curl -d '{"POST_objects_draft":[{"table": "bco_draft", "owner_group": "chrisarmstrong15183"}]}' -H 'Authorization: Token e202270bc7a38d43559ac967222453c725e3119b' -H 'Content-type: application/json; charset=UTF-8' -X POST http://127.0.0.1:8000/api/objects/draft/ | python3.9 -m json.tool

# Request a table that exists and the requestor
# is in the provided owner group, and the group
# does have write permissions.
curl -d '{"POST_objects_draft":[{"contents": {}, "owner_group": "bco_drafters", "schema": "IEEE", "state": "DRAFT", "table": "bco_draft"}]}' -H 'Authorization: Token e202270bc7a38d43559ac967222453c725e3119b' -H 'Content-type: application/json; charset=UTF-8' -X POST http://127.0.0.1:8000/api/objects/draft/ | python3.9 -m json.tool

# Draft ID provided.

# Request a table that exists and the requestor
# is in the provided owner group, and the group
# does have write permissions.  Try to update
# an object ID that doesn't exist.
curl -d '{"POST_objects_draft":[{"contents": {}, "object_id": "http://127.0.0.1:8000/BCO_DRAFT_this_id_should_not_exist", "owner_group": "bco_drafters", "schema": "IEEE", "state": "DRAFT", "table": "bco_draft"}]}' -H 'Authorization: Token e202270bc7a38d43559ac967222453c725e3119b' -H 'Content-type: application/json; charset=UTF-8' -X POST http://127.0.0.1:8000/api/objects/draft/ | python3.9 -m json.tool

# Request a table that exists and the requestor
# is in the provided owner group, and the group
# does have write permissions.  Try to update
# an object ID that DOES exist.
curl -d '{"POST_objects_draft":[{"contents": {}, "object_id": "http://127.0.0.1:8000/BCO_DRAFT_838941718ecc4eefb1893db6953a4740", "owner_group": "bco_drafters", "schema": "IEEE", "state": "DRAFT", "table": "bco_draft"}]}' -H 'Authorization: Token e202270bc7a38d43559ac967222453c725e3119b' -H 'Content-type: application/json; charset=UTF-8' -X POST http://127.0.0.1:8000/api/objects/draft/ | python3.9 -m json.tool
